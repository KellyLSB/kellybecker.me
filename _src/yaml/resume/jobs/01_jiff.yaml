---
  type: Work Experience
  title: Jiff, Inc
  duration:
    year: 2013 - 2014

  panel:
    type: cloud
    title: Technologies
    cloud:
      Ruby / Ruby on Rails: used-3
      Proprietary Gems: used-4
      Open Sourced Gems: used-4
      Restful JSON: used-0
      Sidekiq: used-3
      Rspec: used-3
      Capistrano: used-1
      Bash / SH: used-4
      Puppet: used-4
      Solr: used-1
      GitHub: used-4
      Circle CI: used-4
      Code Climate: used-1
      Airbrake.io: used-1
      Graylog 2: used-4
      Amazon AWS: used-2
      Amazon AWS - VPC: used-4
      Amazon AWS - EC2: used-4
      Amazon AWS - ELB: used-3
      Amazon AWS - SES: used-2
      Amazon AWS - AMI: used-2
      Amazon AWS - EBS: used-4
      Amazon AWS - S3: used-3
      Ubuntu 12.04 LTS: used-4
      Docker.io: used-4
      Bind9: used-4
      IRCD2 (Admin): used-4
      Stripe: used-0
      Redis: used-3
      MySQL: used-3
      More: used-2

  info:
    Location: Palo Alto, CA
    Title: Software Engineer
    Position Level: Senior
    Duration: September 2013 - April 2014
    Details:
      body:
        full: |
          At Jiff I was responsible for the Rails Platform. I was part of a team of 4 total engineers; made of up of our Lead Engineer, another Sr. Engineer, a Jr. Engineer and Me.

          We were constantly working on making our Ruby backend to be more responsive and more optimized. Our long term goal was to reorganize our platform code to be more fit for a Service Oriented Architecture. We started by optimizing our pain points that used heavy queries, duplicated code and overly complex data models. Then we spent time determining which components were specific to services we offered; then the hacking began and I mean literal hacking we cut out close to 75% of the code base and we still had more to go when I left.

          One of the solutions we were using to migrate to SOA so that our services could run independently of the platform was called &#34;gemification&#34;. While the idea was the team&#39;s, I was given the honor to come up with the architecture and implementation process; which was subjected to a through peer review by the Platform, API and QA teams. This process included a write up, prototype and benchmark. I then helped guide the each team member in ensuring that we were consistent with our decided plan and did not deviate without a proper meeting; a common issue at Jiff.

          Along side this plan, I proposed a PaaS server architecture using Amazon VPC, EC2 and Docker.IO with Bind9 Dynamic DNS for service discovery. There was much team backing and there was even time that was allocated to the implementation process as well as a working prototype. Unfortunately our new VP of Engineering had cancelled the project before it&#39;s completion.

          Along side gemification I was a huge advocate for taking non-company critical code and releasing it open source. We released 2 gems during my duration at Jiff, unfortunately there was not enough time to properly document them to my satisfaction. Upon being let go I forked them and plan to continue development on them.
        summarized: |
          Worked with the team to split up a monolithic Rails application into services that could run either joined with the Platform or as individual services.

          ###### **Published two Ruby Gems:**
          - Multitype: https://github.com/KellyLSB/multitype
          - PolyTag: https://github.com/KellyLSB/polytag

          Architected a scaling deployment proposal involving Amazon AWS (VPC, EC2, Route 53, S3), Docker.IO and Bind 9 DNS for Service Discovery. The prototyping of this proposal led to my Docker Dynamic DNS Service Discovery Daemon (try saying that 10 times fast). You can find that post at http://objectiveoriented.com/devops/2014/02/15/docker-io-service-discovery-your-network-and-how-to-make-it-work/
  
